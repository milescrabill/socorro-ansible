---
- hosts: all
  any_errors_fatal: true
  remote_user: centos
  connection: ssh
  vars:
    new_datadog_api_key: null
  vars_prompt:
    - name: "shard_allocation_disabled"
      prompt: "Have you disabled shard allocation? (yes to advance, be honest!)"
      default: "no"
  tasks:
    - name: conditional fail
      fail:
        msg: "Disable shard allocation!"
      run_once: true
      when: shard_allocation_disabled != "yes"
    - name: substitute old datadog API key for new key
      replace:
        dest: /etc/dd-agent/datadog.conf
        regexp: "^api_key: [a-zA-Z0-9]*$"
        replace: "api_key: {{new_datadog_api_key}}"
      become: true
      become_user: root
    - name: create /etc/dd-agent/conf.d/elastic.yaml if it does not exist
      copy:
        src: /etc/dd-agent/conf.d/elastic.yaml.example
        dest: /etc/dd-agent/conf.d/elastic.yaml
        remote_src: True
      become: true
      become_user: root
    - name: check if data node
      command: 'grep "data: true$" /etc/elasticsearch/elasticsearch.yml'
      ignore_errors: True
      changed_when: False
      register: is_data_node
    - name: check if master node
      command: 'grep "master: true$" /etc/elasticsearch/elasticsearch.yml'
      ignore_errors: True
      changed_when: False
      register: is_master_node
    - name: substitute datadog default tags for data node tag
      replace:
        dest: /etc/dd-agent/datadog.conf
        regexp: "^#tags: mytag0, mytag1$"
        replace: "tags: es_data_node"
      become: true
      become_user: root
      when: is_data_node|succeeded and is_master_node|failed
      register: changed_to_data
    - name: substitute datadog default tags for master node tag
      replace:
        dest: /etc/dd-agent/datadog.conf
        regexp: "^#tags: mytag0, mytag1$"
        replace: "tags: es_master_node"
      become: true
      become_user: root
      when: is_data_node|failed and is_master_node|succeeded
    - name: (data node) set ES_HEAP_SIZE in /etc/sysconfig
      replace:
        dest: /etc/sysconfig/elasticsearch
        regexp: "^#ES_HEAP_SIZE=2g"
        replace: "ES_HEAP_SIZE=14g"
      become: true
      become_user: root
      when: is_data_node|succeeded and is_master_node|failed
      register: set_es_heap_size
    - name: enable http api in /etc/elasticsearch/elasticsearch.yml
      replace:
        dest: /etc/elasticsearch/elasticsearch.yml
        regexp: "http:\n    enabled: false"
        replace: "http:\n    enabled: true"
      become: true
      become_user: root
      when: is_data_node|succeeded or is_master_node|succeeded
      register: enable_http_api
    - name: restart elasticsearch
      service:
        name: elasticsearch
        state: restarted
      become: true
      become_user: root
      when: >
        set_es_heap_size.changed == true or
        enable_http_api.changed == true
    - name: restart datadog
      service:
        name: datadog-agent
        state: restarted
      become: true
      become_user: root
      when: changed_to_data.changed == true
